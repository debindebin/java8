public static void main(String[] args){
//        Random random = new Random(); random.ints().limit(10).forEach(System.out::println);


        List<Integer> list = Arrays.asList(3,4,5,23,44,54,14);

        list.forEach(System.out::println);
        List rList = list.stream().map(integer -> integer*integer+1).collect(Collectors.toList());
        rList.forEach(i->System.out.println((Integer) i+(Integer)i));

        List<String> strings = Arrays.asList("abc", "", "bc", "efg", "abcd","", "jkl", "", "", "", "");
        // 获取空字符串的数量
        long count = strings.parallelStream().filter(string -> string.isEmpty()).count();
        System.out.print(count);

        List<String> filtered = strings.stream().filter(string -> !string.isEmpty()).collect(Collectors.toList()); System.out.println("筛选列表: " + filtered.toString());
        String mergedString = strings.stream().filter(string -> !string.isEmpty()).collect(Collectors.joining(",")); System.out.println("合并字符串: " + mergedString);

        List<Integer> numbers = Arrays.asList(3, 2, 2, 3, 7, 3, 5);
        IntSummaryStatistics stats = numbers.stream().mapToInt((x) -> x).summaryStatistics();
        System.out.println("列表中最大的数 : " + stats.getMax());
        System.out.println("列表中最小的数 : " + stats.getMin());
        System.out.println("所有数之和 : " + stats.getSum());
        System.out.println("平均数 : " + stats.getAverage());
    }
